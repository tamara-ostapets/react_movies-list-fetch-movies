{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","helpers.js","api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","clearInput","addMovie","findMovie","searchedMovie","found","useState","query","setValue","htmlFor","type","id","placeholder","ClassNames","value","onChange","e","target","onClick","defaultProps","BASE_URL","baseRequest","a","fetch","response","json","getMovie","App","state","data","Response","setState","Title","imdbID","Plot","Poster","find","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a33206d7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ clearInput,\n  addMovie,\n  findMovie,\n  searchedMovie,\n  found }) => {\n  const [query, setValue] = useState('');\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames('input', { 'is-danger': !found })}\n              value={query}\n              onChange={(e) => {\n                setValue(e.target.value);\n                clearInput();\n              }}\n            />\n          </div>\n\n          {found || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                findMovie(query);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie();\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {searchedMovie && <MovieCard {...searchedMovie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  clearInput: PropTypes.func.isRequired,\n  addMovie: PropTypes.func.isRequired,\n  findMovie: PropTypes.func.isRequired,\n  searchedMovie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }),\n  found: PropTypes.bool.isRequired,\n};\nFindMovie.defaultProps = {\n  searchedMovie: {},\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=8b4080ef&';\n\nconst POSTER_URL = 'http://img.omdbapi.com/?apikey=8b4080ef&';\n\nexport const baseRequest = async(title = '') => {\n  const response = await fetch(`${BASE_URL}t=${title}`);\n\n  return response.json();\n};\n\nexport const posterRequest = async(url) => {\n  const response = await fetch(`${POSTER_URL}${url}`);\n\n  return response.json();\n};\n","import { baseRequest } from './helpers';\n\nexport const getMovie = query => baseRequest(query);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\nimport { getMovie } from './api';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n    searchedMovie: null,\n    found: true,\n  };\n\n  findMovie = async(query) => {\n    const searchedMovie = await getMovie(query);\n\n    if (searchedMovie.Response === 'True') {\n      this.setState({\n        searchedMovie: {\n          ...searchedMovie,\n          title: searchedMovie.Title,\n          imdbId: searchedMovie.imdbID,\n          description: searchedMovie.Plot,\n          imgUrl: searchedMovie.Poster,\n        },\n        found: true,\n      });\n    } else {\n      this.setState({ found: false });\n    }\n  }\n\n  addMovie = () => {\n    const { searchedMovie, movies } = this.state;\n\n    if (movies.find(movie => movie.imdbId === searchedMovie.imdbId)) {\n      return;\n    }\n\n    if (searchedMovie) {\n      this.setState(prevState => ({\n        movies: [\n          ...prevState.movies,\n          searchedMovie],\n        searchedMovie: null,\n        found: true,\n      }));\n    }\n  }\n\n  clearInput = () => {\n    this.setState({\n      searchedMovie: null, found: true,\n    });\n  }\n\n  render() {\n    const { movies, searchedMovie, found } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            found={found}\n            clearInput={this.clearInput}\n            searchedMovie={searchedMovie}\n            findMovie={this.findMovie}\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}