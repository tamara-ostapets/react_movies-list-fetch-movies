{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","helpers.js","api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbId","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","FindMovie","clearInput","addMovie","findMovie","searchedMovie","isFound","useState","query","setValue","htmlFor","type","id","placeholder","cn","value","onChange","e","target","handleChange","onClick","BASE_URL","request","a","fetch","response","json","getMovie","App","setMovies","setIsFound","setSearchedMovie","useEffect","data","newMovie","Response","Title","imdbID","Plot","Poster","find","prevState","ReactDOM","render","document","getElementById"],"mappings":"kzEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,OAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAI,qCAAgCJ,IAAvC,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,IC7CR,IAAMQ,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAMT,QAAYS,S,wBCJ3BE,EAAY,SAAC,GAMnB,IALLC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,QACI,EACsBC,mBAAS,IAD/B,mBACGC,EADH,KACUC,EADV,KAQJ,OACE,oCACE,0BAAMlB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQmB,QAAQ,eAAjC,eAIA,yBAAKnB,UAAU,WACb,2BACEoB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZtB,UAAWuB,IAAG,QAAS,CAAE,aAAcR,IACvCS,MAAOP,EACPQ,SAAU,SAACC,IApBF,SAACA,GACpBR,EAASQ,EAAEC,OAAOH,OAClBb,IAmBYiB,CAAaF,OAKlBX,GACC,uBAAGf,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEoB,KAAK,SACLpB,UAAU,kBACV6B,QAAS,kBAAMhB,EAAUI,KAH3B,iBASF,yBAAKjB,UAAU,WACb,4BACEoB,KAAK,SACLpB,UAAU,oBACV6B,QAASjB,GAHX,sBAWN,yBAAKZ,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCc,GAAiB,kBAAC,EAAcA,MAiBzCJ,EAAUN,aAAe,CACvBU,cAAe,I,YC5FXgB,EAAW,4CAEJC,EAAO,uCAAG,0CAAAC,EAAA,6DAAMpC,EAAN,+BAAc,GAAd,SACEqC,MAAM,GAAD,OAAIH,EAAJ,aAAiBlC,IADxB,cACfsC,EADe,yBAGdA,EAASC,QAHK,2CAAH,qDCAPC,EAAW,SAAAnB,GAAK,OAAIc,EAAQd,ICK5BoB,EAAM,WAAO,IAAD,EACKrB,mBAAS,IADd,mBAChBV,EADgB,KACRgC,EADQ,OAEOtB,oBAAS,GAFhB,mBAEhBD,EAFgB,KAEPwB,EAFO,OAGmBvB,mBAAS,MAH5B,mBAGhBF,EAHgB,KAGD0B,EAHC,KAKvBC,qBAAU,WACRH,EAAUI,KACT,IAEH,IAIM7B,EAAS,uCAAG,WAAMI,GAAN,eAAAe,EAAA,sEACOI,EAASnB,GADhB,UAGU,WAFpB0B,EADU,QAGHC,SAHG,uBAIdL,GAAW,GACXC,EAAiB,MALH,0BAUhBA,EAAiB,2BACZG,GADW,IAEd/C,MAAO+C,EAASE,MAChB9C,OAAQ4C,EAASG,OACjBjD,YAAa8C,EAASI,KACtBjD,OAAQ6C,EAASK,UAGnBT,GAAW,GAlBK,2CAAH,sDAkCf,OACE,yBAAKvC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEe,QAASA,EACTJ,WA9CW,aA+CXG,cAAeA,EACfD,UAAWA,EACXD,SAxBS,WACVE,IAIDR,EAAO2C,MAAK,SAAAzC,GAAK,OAAIA,EAAMT,SAAWe,EAAcf,YAIxDuC,GAAU,SAAAY,GAAS,4BAASA,GAAT,CAAoBpC,OACvCyB,GAAW,MAeLC,iBAAkBA,OC7D5BW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.92e82ca6.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbId,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbId}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  imdbId: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({\n  clearInput,\n  addMovie,\n  findMovie,\n  searchedMovie,\n  isFound,\n}) => {\n  const [query, setValue] = useState('');\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    clearInput();\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': !isFound })}\n              value={query}\n              onChange={(e) => {\n                handleChange(e);\n              }}\n            />\n          </div>\n\n          {isFound || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie(query)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {searchedMovie && <MovieCard {...searchedMovie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  clearInput: PropTypes.func.isRequired,\n  addMovie: PropTypes.func.isRequired,\n  findMovie: PropTypes.func.isRequired,\n  searchedMovie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    imgUrl: PropTypes.string.isRequired,\n  }),\n  isFound: PropTypes.bool.isRequired,\n};\nFindMovie.defaultProps = {\n  searchedMovie: {},\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=8b4080ef&';\n\nexport const request = async(title = '') => {\n  const response = await fetch(`${BASE_URL}t=${title}`);\n\n  return response.json();\n};\n","import { request } from './helpers';\n\nexport const getMovie = query => request(query);\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\nimport { getMovie } from './api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [isFound, setIsFound] = useState(true);\n  const [searchedMovie, setSearchedMovie] = useState(null);\n\n  useEffect(() => {\n    setMovies(data);\n  }, []);\n\n  const clearInput = () => {\n\n  };\n\n  const findMovie = async(query) => {\n    const newMovie = await getMovie(query);\n\n    if (newMovie.Response === 'False') {\n      setIsFound(false);\n      setSearchedMovie(null);\n\n      return;\n    }\n\n    setSearchedMovie({\n      ...newMovie,\n      title: newMovie.Title,\n      imdbId: newMovie.imdbID,\n      description: newMovie.Plot,\n      imgUrl: newMovie.Poster,\n    });\n\n    setIsFound(true);\n  };\n\n  const addMovie = () => {\n    if (!searchedMovie) {\n      return;\n    }\n\n    if (movies.find(movie => movie.imdbId === searchedMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevState => ([...prevState, searchedMovie]));\n    setIsFound(true);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          isFound={isFound}\n          clearInput={clearInput}\n          searchedMovie={searchedMovie}\n          findMovie={findMovie}\n          addMovie={addMovie}\n          setSearchedMovie={setSearchedMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}